<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- Setup NuGet restore -->
	<PropertyGroup>
		<!-- Instruct NuGet to perform a NETCore-like restore -->
		<TargetFramework>netcore50</TargetFramework>
		<!-- Instruct NuGet that we use PackageReference, rather than project.json -->
		<RestoreProjectStyle>PackageReference</RestoreProjectStyle>
		<!-- Specify a well-known usually ignored directory for the generated targets -->
		<RestoreOutputPath>$(MSBuildThisFileDirectory).nuget</RestoreOutputPath>
		<Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
	</PropertyGroup>
	<Import Project="$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.props" Condition="Exists('$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.props')" />

	<!-- Packaging project for Merq -->
	<PropertyGroup>
		<IsPackagingProject>true</IsPackagingProject>
		<IncludeOutputsInPackage>false</IncludeOutputsInPackage>
		<IncludeFrameworkReferencesInPackage>false</IncludeFrameworkReferencesInPackage>

		<PackageId>Merq</PackageId>
		<Title>Merq: Command Bus + Event Stream (Interfaces)</Title>
		<Authors>Mobile Essentials</Authors>
		<Owners>mobessen</Owners>
		<Description>Command Bus and Event Stream patterns core interfaces</Description>
		<Summary>Command Bus and Event Stream patterns core interfaces</Summary>
		<Copyright>Copyright 2016 © Mobile Essentials</Copyright>

		<PackageProjectUrl>https://github.com/MobileEssentials/Merq</PackageProjectUrl>
		<PackageLicenseUrl>https://raw.github.com/MobileEssentials/Merq/master/LICENSE</PackageLicenseUrl>
		<PackageIconUrl>https://raw.github.com/MobileEssentials/Merq/master/icon/48.png</PackageIconUrl>

		<Out Condition="'$(Out)' == ''">..\out</Out>
		<PackageOutputPath>$(Out)</PackageOutputPath>
		<NuGetRepo Condition="'$(NuGetRepo)' == ''">https://www.myget.org/F/xvs/api/v2/package</NuGetRepo>
		<NuGetUrl Condition="'$(NuGetUrl)' == ''">https://dist.nuget.org/win-x86-commandline/latest/nuget.exe</NuGetUrl>
		<NuGet Condition="'$(NuGet)' == ''">$(RestoreOutputPath)\nuget.exe</NuGet>
	</PropertyGroup>

	<ItemGroup>
		<PackageFile Include="Core\Merq\bin\$(Configuration)\Merq.dll">
			<PackagePath>lib\netstandard1.3\Merq.dll</PackagePath>
		</PackageFile>
		<PackageFile Include="Core\Merq\bin\$(Configuration)\Merq.pdb">
			<PackagePath>lib\netstandard1.3\Merq.pdb</PackagePath>
		</PackageFile>
		<PackageFile Include="Core\Merq\bin\$(Configuration)\Merq.xml">
			<PackagePath>lib\netstandard1.3\Merq.xml</PackagePath>
		</PackageFile>
		<PackageFile Include="Core\Merq\bin\$(Configuration)\build\*.*">
			<Kind>build</Kind>
		</PackageFile>
		<PackageFile Include="Installers\Merq.Msi\bin\$(Configuration)\Merq.msi">
			<Kind>tools</Kind>
		</PackageFile>
		<PackageFile Include="Installers\Merq.Msi\Merq.wxi">
			<Kind>tools</Kind>
		</PackageFile>
		<PackageFile Include="Vsix\Merq.Vsix\bin\$(Configuration)\Merq.vsix">
			<Kind>tools</Kind>
		</PackageFile>
		<PackageFile Include="Vsix\Merq.Vsix\bin\$(Configuration)\extension.vsixmanifest">
			<Kind>tools</Kind>
		</PackageFile>
		<PackageFile Include="Vsix\Merq.Vsix\bin\$(Configuration)\Microsoft.VisualStudio.Xamarin.Merq.json"
					 Condition="'$(IsProductComponent)' == 'true'">
			<Kind>tools</Kind>
		</PackageFile>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="NuGet.Build.Packaging" Version="*">
			<PrivateAssets>All</PrivateAssets>
		</PackageReference>
		<PackageReference Include="GitInfo" Version="*">
			<PrivateAssets>All</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<Target Name="GitVersion" />
	<Target Name="SetPackageVersion" BeforeTargets="GetPackageVersion" DependsOnTargets="GitVersion">
		<PropertyGroup>
			<PackageVersion>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)$(GitSemVerDashLabel)</PackageVersion>
		</PropertyGroup>
	</Target>

	<!-- Import NuGet.targets for Restore -->
	<PropertyGroup>
		<NuGetRestoreTargets Condition="'$(NuGetRestoreTargets)'==''">$(MSBuildExtensionsPath)\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets</NuGetRestoreTargets>
	</PropertyGroup>
	<Import Condition="Exists('$(NuGetRestoreTargets)')" Project="$(NuGetRestoreTargets)" />
	
	<!-- NuGet generated targets -->
	<Import Project="$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.targets" Condition="Exists('$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.targets')" />

	<!-- Unfortunately, NuGet restore depends on this target for its _GenerateRestoreProjectReferencePaths target -->
	<Target Name="_SplitProjectReferencesByFileExistence" />
</Project>