<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), NuGet.Restore.targets))\NuGet.Restore.targets"
			Condition=" '$(NuGetRestoreImported)' != 'true' " />

	<PropertyGroup>
		<Version Condition="'$(Version)' == '1.0.0.0'"></Version>
	</PropertyGroup>

	<ItemGroup Condition="'$(IncludeGlobalAssemblyInfo)' != 'false'">
		<Compile Include="$(MSBuildThisFileDirectory)GlobalAssemblyInfo.cs" />
	</ItemGroup>
	
	<Target Name="GetVersion" BeforeTargets="Build" DependsOnTargets="GitVersion" Returns="$(Version)">
		<PropertyGroup>
			<!-- Our version is always the base version, with different pre-release labels for non-baseline builds -->
			<VersionPrefix>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)</VersionPrefix>
			<!-- PR builds are *always* prerelease -->
			<VersionSuffix Condition="'$(GitBranch)' == 'undefined'">-pr</VersionSuffix>
			<VersionSuffix Condition="'$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)' != ''">-pr$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)</VersionSuffix>
			<!-- If still no suffix was determined, default it to the optional semver label suffix -->
			<VersionSuffix Condition="'$(VersionSuffix)' == ''">$(GitSemVerDashLabel)</VersionSuffix>

			<!-- Finally, we'll use the branch name as a pre-release label unless it's master -->
			<VersionSuffix Condition="'$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)' == '' and 
									  '$(BUILD_SOURCEBRANCHNAME)' != '' and 
									  '$(BUILD_SOURCEBRANCHNAME)' != 'master'">$(GitSemVerDashLabel)-$(BUILD_SOURCEBRANCHNAME)</VersionSuffix>

			<!-- Finally make up the version -->
			<Version>$(VersionPrefix)$(VersionSuffix)</Version>
	</PropertyGroup>
	</Target>
	
</Project>