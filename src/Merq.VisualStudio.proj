<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="Merq.props" />
	<Import Project="Directory.Build.props" />

	<!-- Setup NuGet restore -->
	<PropertyGroup>
		<!-- Instruct NuGet to perform a NETCore-like restore -->
		<TargetFramework>netcore50</TargetFramework>
		<!-- Instruct NuGet that we use PackageReference, rather than project.json -->
		<RestoreProjectStyle>PackageReference</RestoreProjectStyle>
		<!-- Specify a well-known usually ignored directory for the generated targets -->
		<RestoreOutputPath>$(MSBuildThisFileDirectory).nuget</RestoreOutputPath>
		<Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
	</PropertyGroup>
	<Import Project="$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.props" Condition="Exists('$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.props')" />

	<!-- Packaging project for Merq -->
	<PropertyGroup>
		<IsPackagingProject>true</IsPackagingProject>
		<IncludeOutputsInPackage>false</IncludeOutputsInPackage>
		<IncludeFrameworkReferencesInPackage>false</IncludeFrameworkReferencesInPackage>

		<PackageId>Merq.VisualStudio</PackageId>
		<Title>Merq.VisualStudio: Command Bus + Event Stream + Async Manager VSIX and WiX Installers</Title>
		<Description>Command Bus, Event Stream and Async Manager implementation installers for Visual Studio Extensibility.</Description>
		<Summary>Command Bus, Event Stream and Async Manager implementation installers for Visual Studio Extensibility.</Summary>
		<Copyright>Copyright 2016 © Mobile Essentials</Copyright>

		<Out Condition="'$(Out)' == ''">..\out</Out>
		<PackageOutputPath>$(Out)</PackageOutputPath>
		<NuGetRepo Condition="'$(NuGetRepo)' == ''">https://www.myget.org/F/xvs/api/v2/package</NuGetRepo>
		<NuGetUrl Condition="'$(NuGetUrl)' == ''">https://dist.nuget.org/win-x86-commandline/latest/nuget.exe</NuGetUrl>
		<NuGet Condition="'$(NuGet)' == ''">$(RestoreOutputPath)\nuget.exe</NuGet>
	</PropertyGroup>

	<ItemGroup>
		<PackageFile Include="_._">
			<PackagePath>lib\_._</PackagePath>
		</PackageFile>
		<PackageFile Include="Installers\build\*.*">
			<Kind>build</Kind>
		</PackageFile>
		<PackageFile Include="Vsix\Merq.Vsix\bin\$(Configuration)\Merq*.vsix">
			<Kind>tools</Kind>
		</PackageFile>
		<PackageFile Include="Vsix\Merq.Vsix\bin\$(Configuration)\extension.vsixmanifest">
			<Kind>tools</Kind>
		</PackageFile>
		<PackageFile Include="Vsix\Merq.Vsix\bin\$(Configuration)\Microsoft.VisualStudio.Xamarin.Merq.json">
			<Kind>tools</Kind>
		</PackageFile>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="MSBuilder" Version="0.2.0" />
		<PackageReference Include="MSBuilder.VsixDependency" Version="0.2.7" />
		<PackageReference Include="GitInfo" Version="1.1.48" PrivateAssets="All" />
		<PackageReference Include="NuGet.Build.Packaging" Version="*" PrivateAssets="All" />
	</ItemGroup>
	
	<Import Project="Merq.targets" />
	<Target Name="SetPackageVersion" BeforeTargets="GetPackageVersion" DependsOnTargets="GetVersion">
		<PropertyGroup>
			<PackageVersion>$(Version)</PackageVersion>
		</PropertyGroup>
	</Target>

	<Target Name="GetTargetPath" DependsOnTargets="GetPackageTargetPath" Returns="@(TargetPathWithTargetPlatformMoniker)">
		<ItemGroup>
			<TargetPathWithTargetPlatformMoniker Include="@(PackageTargetPath)" />
		</ItemGroup>
	</Target>

	<!-- Import NuGet.targets for Restore -->
	<PropertyGroup>
		<NuGetRestoreTargets Condition="'$(NuGetRestoreTargets)'==''">$(MSBuildExtensionsPath)\..\Common7\IDE\CommonExtensions\Microsoft\NuGet\NuGet.targets</NuGetRestoreTargets>
	</PropertyGroup>
	<Import Condition="Exists('$(NuGetRestoreTargets)')" Project="$(NuGetRestoreTargets)" />
	
	<!-- NuGet generated targets -->
	<Import Project="$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.targets" Condition="Exists('$(RestoreOutputPath)\$(MSBuildProjectFile).nuget.g.targets')" />

	<!-- Unfortunately, NuGet restore depends on this target for its _GenerateRestoreProjectReferencePaths target -->
	<Target Name="_SplitProjectReferencesByFileExistence" />
	<Target Name="ResolveReferences" />
	<Target Name="BuildOnlySettings" />
</Project>